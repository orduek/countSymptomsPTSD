##############################################################################
#									                                                           #
# 	 The Heterogeneity of Symptoms of Mental Disorders is Heavy-Tailed       #
#                                                                            #
#                         Or Duek & Tobias Spiller                           # 
#                                                                            #
#                       Code Version 1.0 (15.02.2021)                        #
#                                                                            #
#----------------------------------------------------------------------------#
#                                                                            #
#                             Consistency                                    #
#									                                                           #
##############################################################################


###### Table of Contents #####################################################
# Script 2: PCA
#----- 1. Load libraries ----------------------------------------------------#
#----- 2. Import and prepare data -------------------------------------------#
#----- 3. Descriptive -------------------------------------------------------#

#----- 4. PCA  --------------------------------------------------------------#
#-----  4.1 Full sample  ----------------------------------------------------#
#-----  4.2 Percentage based sample  ----------------------------------------#
#-----  4.3 Frequency based sample  -----------------------------------------#
#-----  4.4 Results  --------------------------------------------------------#
#----- 5. Session Info  -----------------------------------------------------#

## General Notes ##
# datax = dataframe script one with scores, binarized items and frequency profiles
# datay = dataframe of items with ordinal ratings AND frequency of symptom profiles (redcued datax)
# dataz = dataframe of items with ordinal ratings WITHOUT frequency of symptom profiles (redcued datay)

###### 1. Load Libraries #####################################################
# Data handling + basic calculations
if(!require("tidyverse")) install.packages("tidyverse")

#Consistency
if(!require("MBESS")) install.packages("MBESS")
if(!require("psych")) install.packages("psych")




###### 2. Import and prepare data ############################################
# Load datax created in script one!

datax<- read_delim("Generated Data/Matched_freq_count.csv", 
                   ";", escape_double = FALSE, trim_ws = TRUE)

# Prepare
# Create Splits based on % of sample
Splits_percentage <- c()

freq_2080 <- datax %>% 
  arrange(freq) %>% 
  slice_tail(prop = 0.2)
Splits_percentage[1] <- min(freq_2080$freq)

freq_5050 <- datax %>% 
  arrange(freq) %>% 
  slice_tail(prop = 0.5)
Splits_percentage[2] <- min(freq_5050$freq)

freq_8020 <- datax %>% 
  arrange(freq) %>% 
  slice_tail(prop = 0.8)
Splits_percentage[3] <- min(freq_8020$freq)

# Create Splits based on frequency
Splits_frequency <- c()
Splits_frequency[1] <- 5
Splits_frequency[2] <- 2
Splits_frequency[3] <- 1

Splits_percentage
Splits_frequency

# Create Splits based on median symptom endorsement
Splits_Sum_Of_Symptoms <- c()
Splits_Sum_Of_Symptoms[1] <- median(datax$PHQ_sum)

Splits_percentage
Splits_frequency
Splits_Sum_Of_Symptoms

# Prepare dataset for further analysis
datau <- datax %>% 
  select(PHQ1:PHQ9, PHQ_sum)

datav <- datau %>% 
  select(- PHQ_sum)

datay <- datax %>% 
  select(PHQ1:PHQ9, freq)

dataz <- datay %>% 
  select(- freq)

###### 3. Descriptive ########################################################

summary(datax)
summary(datay)
summary(dataz)


###### 4. Consistency ################################################################
results = matrix(nrow = 5, ncol = 7)
colnames(results) <- c("Split", "Part", "Sample Size", "Cronbach Alpha","McDonald Omgea", "median", "IQR")


######  4.1 Full sample ######################################################

# Alpha
alpha <- psych::alpha(datav, check.keys =TRUE)
results[5,4] <- alpha$total$raw_alpha

# Omega
Omega <- psych::omega(datav, check.keys =TRUE)
results[5,5] <- Omega$omega.tot

results[5,1] <- "Full"
results[5,3] <- nrow(datav)

# Median / IQR

results[5,6] <- median(datau$PHQ_sum)
results[5,7] <- IQR(datau$PHQ_sum)


######  4.2 Percentage based sample ######################################################
results[1,2] <- "top"
results[2,2] <- "low"
results[3,2] <- "top"
results[4,2] <- "low"

results[1:2,1] <- "SUM"
results[3:4,1] <- "FREQ"


######   4.2.1 Sum Split ###############################################################
######    4.2.1.1 Top ###############################################################
# Preprocess
data_top <- datau %>% 
  filter(PHQ_sum >= Splits_Sum_Of_Symptoms[1]) %>% 
  select(-PHQ_sum)
results[1,3] <- nrow(data_top)

# Alpha
alpha_top <- psych::alpha(data_top, check.keys =TRUE) 
results[1,4] <- alpha_top$total$raw_alpha

# Omega
Omega_top <- psych::omega(data_top, check.keys =TRUE) 
results[1,5] <- Omega_top$omega.tot

# Median / IQR
data_top_m_sd <- datau %>% 
  filter(PHQ_sum >= Splits_Sum_Of_Symptoms[1])

results[1,6] <- median(data_top_m_sd$PHQ_sum)
results[1,7] <- IQR(data_top_m_sd$PHQ_sum)


######    4.2.1.2 Low ###############################################################
# Preprocess
data_low <- datau %>% 
  filter(PHQ_sum < Splits_Sum_Of_Symptoms[1]) %>% 
  select(-PHQ_sum)
results[2,3] <- nrow(data_low)

# Alpha
alpha_low <- psych::alpha(data_low, check.keys =TRUE) 
results[2,4] <- alpha_low$total$raw_alpha

# Omega
Omega_low <- psych::omega(data_low, check.keys =TRUE) 
results[2,5] <- Omega_low$omega.tot

# Median / IQR
data_low_m_sd <- datau %>% 
  filter(PHQ_sum < Splits_Sum_Of_Symptoms[1])

results[2,6] <- median(data_low_m_sd$PHQ_sum)
results[2,7] <- IQR(data_low_m_sd$PHQ_sum)

######   4.2.2 Freq split ###############################################################
######    4.2.2.1 Top ###############################################################
# Preprocess
data_top <- datay %>% 
  filter(freq >= Splits_percentage[2]) %>% 
  select(-freq)
results[3,3] <- nrow(data_top)

# Alpha
alpha_top <- psych::alpha(data_top, check.keys =TRUE) 
results[3,4] <- alpha_top$total$raw_alpha

# Omega
Omega_top <- psych::omega(data_top, check.keys =TRUE) 
results[3,5] <- Omega_top$omega.tot

# Median / IQR
data_top_m_sd <- datax %>% 
  filter(freq >= Splits_percentage[2])

results[3,6] <- median(data_top_m_sd$PHQ_sum)
results[3,7] <- IQR(data_top_m_sd$PHQ_sum)

######    4.2.2.2 Low ###############################################################
# Preprocess
data_low <- datay %>% 
  filter(freq < Splits_percentage[2]) %>% 
  select(-freq)
results[4,3] <- nrow(data_low)

# Alpha
alpha_low <- psych::alpha(data_low, check.keys =TRUE) 
results[4,4] <- alpha_low$total$raw_alpha

# Omega
Omega_low <- psych::omega(data_low, check.keys =TRUE) 
results[4,5] <- Omega_low$omega.tot


# Median / IQR
data_low_m_sd <- datax %>% 
  filter(freq < Splits_percentage[2])

results[4,6] <- median(data_low_m_sd$PHQ_sum)
results[4,7] <- IQR(data_low_m_sd$PHQ_sum)

######  4.4 Results ############################################################
results

###### 5. Session Info #########################################################
sessionInfo()




#####################################  END  ####################################
